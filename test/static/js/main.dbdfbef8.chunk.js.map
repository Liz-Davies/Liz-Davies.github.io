{"version":3,"sources":["logo.svg","components/hex/HexPie.js","components/hex/HexIcon.js","components/hex/HexRows.js","components/experience.js","components/navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HexPie","this","props","name","info","className","tabIndex","icon","percent","rotateLeft","rotateRight","leftStyle","transform","rightStyle","style","renderNamePlate","React","Component","HexIcon","AbstractHexRowSet","constructor","TypeError","items","renderElements","HexIconRowSet","map","item","index","key","HexPieRowSet","MONTH_FORMAT","Intl","DateTimeFormat","undefined","year","month","timeZone","formatDate","start","end","startArr","split","startDate","Date","format","endArr","endDate","ExperienceItem","print","Experience","location","renderedPositions","positions","title","experience","length","renderExpItems","NavButton","targetId","selected","href","Navbar","highlight","offset","window","innerHeight","state","buttons","brandImgUrl","brandText","src","alt","e","height","target","scrollingElement","scrollTop","console","log","targets","focus","find","position","setState","button","elem","document","getElementById","offsetTop","sort","a","b","addEventListener","handleScroll","bind","renderButtons","id","renderBrand","ticking","library","add","fas","faGithubSquare","faLinkedin","App","onScroll","class","data-title","resume","skills","work","extraCurriculars","interests","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dbdfbef8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport './hex-style.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport default class HexPie extends React.Component{\r\n    renderNamePlate(){\r\n        const {name,info} = this.props;\r\n        if(!name && !info){\r\n            //if the name and info are empty assume user doesn't want nameplate\r\n            return \"\";\r\n        }\r\n        return(<div className=\"hex-name-plate\"\r\n            tabIndex={0}>\r\n            <span className=\"hex-title\">\r\n                {name}\r\n            </span>\r\n            {info?<span  className=\"d-print-none hex-info\"><FontAwesomeIcon icon=\"info-circle\"/></span>:''}\r\n        </div>);\r\n    }\r\n    render(){\r\n        const {percent,info} = this.props;\r\n        var rotateLeft = 0;\r\n        var rotateRight = 0;\r\n        if(percent){\r\n            if(percent <= 50 && percent >= 0){\r\n                rotateLeft = (percent/100) * 180;\r\n            }else if(percent > 50 && percent <=100 ){\r\n                rotateLeft = 180;\r\n                rotateRight = ((percent-50)/100) * 180;\r\n            }\r\n        }\r\n        var leftStyle={\r\n            transform: `rotate(-${rotateLeft}deg)`\r\n        }\r\n        var rightStyle={\r\n            transform: `rotate(-${rotateRight}deg)`\r\n        }\r\n        return(\r\n            <div className={\"hex hex-pie \"+(info ? \"expandable\": \"\")}>\r\n            <div className=\"hex-mask\"><div className=\"hex-mask\"><div className=\"hex-mask\">\r\n            <div className=\"hex-content\">\r\n                <div className=\"hex-left\">\r\n                    <div className=\"hex-fill\" style={leftStyle}></div>\r\n                </div>\r\n                <div className=\"hex-right\">\r\n                    <div className=\"hex-fill\" style={rightStyle}></div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"hex-mask\"><div className=\"hex-mask\"><div className=\"hex-mask\">{/*Shadow masks*/}</div></div></div>\r\n            {this.renderNamePlate()}\r\n            {info ? <div className=\"hex-hover-box\"><div className=\"hex-hover-box-text\">{info}</div></div> : \"\"}\r\n            </div></div></div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './hex-style.css';\r\n\r\nexport default class HexIcon extends React.Component{\r\n    render(){\r\n        const {name,icon} = this.props;\r\n        return (\r\n            <div className=\"hex hex-icon-frame\">\r\n            <div className=\"hex-mask\"><div className=\"hex-mask\"><div className=\"hex-mask\">\r\n                <div className=\"hex-content\">\r\n                <FontAwesomeIcon className=\"hex-icon\" icon={icon}/>\r\n                <span className=\"text-capitalize hex-icon-title\">{name}</span>\r\n                </div>\r\n                <div className=\"hex-mask\"><div className=\"hex-mask\"><div className=\"hex-mask\">\r\n                {/*Shadow masks*/}\r\n                </div></div></div>\r\n            </div></div></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport HexPie from './HexPie.js';\r\nimport HexIcon from './HexIcon.js';\r\n\r\nclass AbstractHexRowSet extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        if(this.constructor === AbstractHexRowSet){\r\n            throw new TypeError(\"Abscract class 'AbstractHexRowSet' cannot be instantiated\")\r\n        }\r\n    }\r\n    render(){\r\n        const {items} = this.props;\r\n        return (\r\n            <div className=\"hex-row\">\r\n                {this.renderElements(items)}\r\n            </div>\r\n        )\r\n    }\r\n    renderElements(){\r\n            throw new TypeError(\"The funtion renderElements must be overwritten by a sub class\")\r\n    }\r\n}\r\nexport class HexIconRowSet extends AbstractHexRowSet{\r\n    renderElements(items){\r\n        return items.map((item,index)=>{return<HexIcon key={index} name={item.name} icon={item.icon}/>});\r\n    }\r\n}\r\nexport class HexPieRowSet extends AbstractHexRowSet{\r\n    renderElements(items){\r\n        return items.map((item,index)=> <HexPie key={index} name={item.name} percent={item.percent} info={item.info}/>);\r\n    }\r\n}\r\n","import React from 'react'\r\nimport './experience.css'\r\n\r\nconst MONTH_FORMAT = Intl.DateTimeFormat(undefined,{ year: 'numeric', month: 'short',timeZone:'UTC'})\r\n\r\nfunction formatDate(start,end){\r\n    const startArr = start.split(\"-\");\r\n    const startDate = new Date(startArr[0],startArr[1]-1);\r\n    if(typeof  end === 'undefined'){\r\n        return MONTH_FORMAT.format(startDate);\r\n    }\r\n    const endArr = end.split(\"-\")\r\n    const endDate = new Date(endArr[0],endArr[1]-1);\r\n    return `${MONTH_FORMAT.format(startDate)} - ${MONTH_FORMAT.format(endDate)}`;\r\n}\r\n\r\nclass ExperienceItem extends React.Component{\r\n    render(){\r\n        const {item,print} = this.props;\r\n        return (\r\n            <li className=\"experience-item\">{item}</li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class Experience extends React.Component{\r\n    renderExpItems(items){\r\n        return items.map((item,index)=><ExperienceItem key={index} item={item}/>);\r\n    }\r\n    render(){\r\n        const {location,positions} = this.props.item;\r\n        const renderedPositions = positions.map(({startDate,endDate,title,experience}, index)=>{\r\n            return [\r\n                    <span className=\"experience-date\">{formatDate(startDate,endDate)}</span>,\r\n                    <span className=\"experience-title\"><strong>{title}</strong></span>,\r\n                    experience != null && experience.length > 0 ?\r\n                    <ul className=\"experience-items\">\r\n                        {this.renderExpItems(experience)}\r\n                    </ul>\r\n                    : \"\"\r\n            ];\r\n        })\r\n        return (\r\n            <div className=\"experience-period row\">\r\n                <h4 className=\"location\">{location}</h4>\r\n                {renderedPositions}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport class VolunteerPosition extends React.Component{\r\n    renderExpItems(items){\r\n        return items.map((item,index)=><ExperienceItem key={index} item={item}/>);\r\n    }\r\n    render(){\r\n        const {location,positions} = this.props.item;\r\n        const renderedPositions = positions.map(({title,startDate,endDate,experience},index)=>{\r\n            return (\r\n                <div className=\"col-12\">\r\n                    <span className=\"experience-date\">{formatDate(startDate,endDate)}</span>\r\n                    <span className=\"experience-title\"><strong>{title}</strong></span>\r\n                    <ul className=\"d-print-none experience-items\">\r\n                        {this.renderExpItems(experience)}\r\n                    </ul>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"experience-placement row \">\r\n                <div className=\"location col-md-3\">\r\n                    <h4>{location}</h4>\r\n                </div>\r\n                <div className=\"experience-detail col-lg-9\">\r\n                    {renderedPositions}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './navbar.css';\r\n\r\nclass NavButton extends React.Component{\r\n    render(){\r\n        const {title,targetId,selected} = this.props;\r\n        return (\r\n            <li className={`nav-button ${selected ? \"selected\":\"\"}`}>\r\n                <a className=\"nav-link\" href={`#${targetId}`}>\r\n                <span className=\"nav-text\">{title}</span>\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\nclass NavGridButton extends React.Component{\r\n    render(){\r\n        const {title,targetId,selected,row} = this.props;\r\n        let style={\r\n            gridRowStart: row+1\r\n        }\r\n        return (\r\n            <li style={style} className={`nav-button nav-grid-button ${selected ? \"selected\":\"\"}`}>\r\n                <a className=\"nav-link\" href={`#${targetId}`}>\r\n                <span className=\"nav-text\">{title}</span>\r\n                </a>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default class Navbar extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        const {highlight} = this.props;\r\n        this.offset = window.innerHeight/3;\r\n        this.state = {\r\n            highlight:highlight\r\n        }\r\n    }\r\n    renderButtons(){\r\n        const {buttons} = this.props;\r\n        const {highlight} = this.state;\r\n        return buttons.map((item)=><NavButton key={item.targetId} selected={highlight===item.targetId} title={item.title} targetId={item.targetId}/>)\r\n    }\r\n    renderBrand(){\r\n        const {brandImgUrl, brandText} = this.props;\r\n        if(brandImgUrl){\r\n            return (\r\n                <img className=\"nav-brand\"\r\n                    src={brandImgUrl}\r\n                    alt={brandText ? brandText : \"brand ID\"}\r\n                    href=\"#\" />\r\n                )\r\n        }else if(brandText){\r\n            return <span className=\"nav-brand\">{brandText}</span>\r\n        }\r\n        return \"\";\r\n    }\r\n    handleScroll(e){\r\n        let height = e.target.scrollingElement.scrollTop + this.offset ;\r\n        console.log(this.targets)\r\n        //first element less than the height\r\n        const focus = this.targets.find((item)=> item.position < height);\r\n        console.log(focus)\r\n        this.setState({highlight:focus===undefined? null : focus.targetId})\r\n    }\r\n    componentDidMount(){\r\n        this.targets = this.props.buttons.map((button)=>{\r\n            var elem = document.getElementById(button.targetId);\r\n            return {targetId:button.targetId,position:elem.offsetTop};\r\n        }).sort((a,b)=> b.position - a.position);\r\n\r\n        window.addEventListener('scroll', this.handleScroll.bind(this));\r\n    }\r\n    render(){\r\n        const buttons = this.renderButtons();\r\n        const {id} = this.props;\r\n        return (\r\n            <nav id={id} className=\"navbar sticky\">\r\n                {this.renderBrand()}\r\n                <ul className=\"nav-list \">{buttons}</ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nvar ticking = false;\r\n\r\nclass NavShuttle extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            start:0\r\n        }\r\n    }\r\n    handleScroll(e){\r\n        if(!ticking){\r\n            window.requestAnimationFrame(()=>{\r\n                this.setState({\r\n                    start: (window.scrollY/this.page_height) * this.client_height\r\n                })\r\n                ticking = false;\r\n            })\r\n            ticking = true;\r\n        }\r\n\r\n    }\r\n    componentDidMount(){\r\n        this.page_height = document.body.clientHeight;\r\n        this.client_height = document.documentElement.clientHeight;\r\n        this.shuttle_height = `${(this.client_height/this.page_height)*100}%`;\r\n        window.addEventListener('scroll', this.handleScroll.bind(this));\r\n    }\r\n\r\n    render(){\r\n        const {start} = this.state;\r\n        let style={\r\n            top:`${start}px`,\r\n            height:this.shuttle_height,\r\n        }\r\n        return <span style={style} className=\"nav-shuttle\"></span>;\r\n    }\r\n}\r\n\r\nexport class SideNav extends Navbar{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            targets:[],\r\n            gridTemplateRows:\"\",\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        let totalHeight = document.body.clientHeight;\r\n        let targets_rev = this.props.buttons.map((button)=>{\r\n            var elem = document.getElementById(button.targetId);\r\n            return {\r\n                title:button.title,\r\n                targetId:button.targetId,\r\n                position:elem.offsetTop\r\n            };\r\n        }).sort((a,b)=>b.position - a.position);\r\n        var localEnd = totalHeight;\r\n        let targets = targets_rev.map((button)=>{\r\n            button.height = localEnd - button.position;\r\n            console.log(`${button.position } - ${localEnd} = ${button.height}`)\r\n            localEnd = button.position;\r\n            return button;\r\n        }).reverse();\r\n\r\n        this.setState({\r\n            targets:targets,\r\n            gridTemplateRows: targets.reduce((acc,item)=>`${acc} ${item.height}fr`,`${targets[0].position}fr`)\r\n        })\r\n    }\r\n    renderButtons(){\r\n        return this.state.targets.map(({targetId,title},index)=> <NavGridButton key={targetId} title={title} row={index+1} targetId={targetId}/>);\r\n    }\r\n    renderBrand(){\r\n        const {brandImgUrl,brandText} = this.props;\r\n        if(typeof brandImgUrl !== 'undefined'){\r\n            return (\r\n                <li className=\"nav-button nav-brand-button\">\r\n                <img className=\"nav-brand\"\r\n                    src={brandImgUrl}\r\n                    alt={brandText ? brandText : \"brand ID\"}\r\n                    href=\"#\" />\r\n                </li>\r\n            );\r\n        }else {\r\n            return <NavGridButton key=\"brand\" row=\"0\" title={brandText ? \" \" : brandText} targetId=\" \"/>;\r\n        }\r\n    }\r\n    render(){\r\n        const {id} = this.props;\r\n        const style = {\r\n            gridTemplateRows:this.state.gridTemplateRows,\r\n        }\r\n        console.log(style)\r\n        return (\r\n            <nav id={id} className=\"navbar side-nav\">\r\n\r\n                <ul style={style} className=\"nav-list nav-grid\">\r\n                    {this.renderBrand()}\r\n                    {this.renderButtons()}\r\n                </ul>\r\n                <NavShuttle/>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport resume from './resume'\nimport {HexIconRowSet,HexPieRowSet} from './components/hex/HexRows.js';\nimport Experience from './components/experience.js';\nimport Navbar from './components/navbar.js';\n\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { faGithubSquare, faLinkedin } from '@fortawesome/free-brands-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core';\n\nlibrary.add(fas,faGithubSquare,faLinkedin)\n\n//<a style=\"background-color:black;color:white;text-decoration:none;padding:4px 6px;font-family:-apple-system, BlinkMacSystemFont, &quot;San Francisco&quot;, &quot;Helvetica Neue&quot;, Helvetica, Ubuntu, Roboto, Noto, &quot;Segoe UI&quot;, Arial, sans-serif;font-size:12px;font-weight:bold;line-height:1.2;display:inline-block;border-radius:3px\" href=\"https://unsplash.com/@aaronburden?utm_medium=referral&amp;utm_campaign=photographer-credit&amp;utm_content=creditBadge\" target=\"_blank\" rel=\"noopener noreferrer\" title=\"Download free do whatever you want high-resolution photos from Aaron Burden\"><span style=\"display:inline-block;padding:2px 3px\"><svg xmlns=\"http://www.w3.org/2000/svg\" style=\"height:12px;width:auto;position:relative;vertical-align:middle;top:-2px;fill:white\" viewBox=\"0 0 32 32\"><title>unsplash-logo</title><path d=\"M10 9V0h12v9H10zm12 5h10v18H0V14h10v9h12v-9z\"></path></svg></span><span style=\"display:inline-block;padding:2px 3px\">Aaron Burden</span></a>\n\nconst buttons = [\n    {title:\"Skills\",targetId:\"skills\"},\n    {title:\"Work History\",targetId:\"work\"},\n    {title:\"Volunteering\",targetId:\"volunteer\"},\n    {title:\"Interests\",targetId:\"interests\"},\n]\n\nfunction App() {\n  return (\n    <div className=\"App\" onScroll={(e)=> console.log(`App scroll: ${e}`)}>\n        <div id=\"title\">\n            <div className=\"title-image\"></div>\n        </div>\n        <Navbar brandImgUrl=\"./LizWatermelon2.png\" brandText=\"Liz Davies\" buttons={buttons}/>\n        <div class=\"content\">\n            <div class=\"content-section\" data-title=\"Skills\" id=\"skills\">\n                <h2 className=\"section-title\">Skills</h2>\n                <HexPieRowSet items={resume.skills}/>\n            </div>\n            <div class=\"content-section\" data-title=\"Work History\" id=\"work\">\n                <h2 className=\"section-title\">Work History</h2>\n                {resume.work.map((item,index)=><Experience key={index} item={item}/>)}\n            </div>\n            <div class=\"content-section\" data-title=\"Volunteering and Extra Curriculars\" id=\"volunteer\">\n                <h2 className=\"section-title\">Volunteering and Extra Curriculars</h2>\n                {resume.extraCurriculars.map((item,index)=><Experience key={index} item={item}/>)}\n            </div>\n            <div class=\"content-section\" data-title=\"Interests\" id=\"interests\">\n                <h2 className=\"section-title\">Interests</h2>\n                <HexIconRowSet items={resume.interests}/>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}